version: "3.9"

services:
  # BASE DE DATOS POSTGRES
  db:
    image: postgres:15
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      POSTGRES_DB: registro_db
      POSTGRES_USER: registro_user
      POSTGRES_PASSWORD_FILE: /run/secrets/secret_password_db
    volumes:
      - pg_data:/var/lib/postgresql/data
    secrets:
      - secret_password_db
    networks:
      - registro_network
    ports:
      - "5432:5432"

  # ADMINER
  adminer:
    image: adminer:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      ADMINER_DEFAULT_SERVER: db
    networks:
      - registro_network
    ports:
      - "8081:8080"
    depends_on:
      - db

  # BACKEND DJANGO
  backend:
    image: registro-backend:1.0.0
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    environment:
      DJANGO_SETTINGS_MODULE: registro.settings
      DATABASE_URL: postgresql://registro_user:@db:5432/registro_db
      SECRET_KEY_FILE: /run/secrets/secret_django
    volumes:
      - backend_data:/app
    secrets:
      - secret_django
      - secret_password_db
    networks:
      - registro_network
    ports:
      - "8000:8000"
    depends_on:
      - db
    command: gunicorn registro.wsgi:application --bind 0.0.0.0:8000 --workers 3

  # FRONTEND ANGULAR + NGINX
  frontend:
    image: registro-frontend:1.0.0
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - registro_network
    ports:
      - "8082:80"
    configs:
      - source: nginx_default
        target: /etc/nginx/conf.d/default.conf
    depends_on:
      - backend

# REDES Y VOLÃšMENES
networks:
  registro_network:
    driver: overlay

volumes:
  pg_data:
  backend_data:

secrets:
  secret_password_db:
    external: true
  secret_django:
    external: true

configs:
  nginx_default:
    external: true
